<?xml version="1.0"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0" DefaultTargets="Publish">
	<Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets"
				Condition="'$(MSBuildCommunityTasksPath)' == ''"/>

	<PropertyGroup>
		<Project>EndpointMvc</Project>
		<ProjectFriendlyName>EndpointMvc</ProjectFriendlyName>
		<ReleaseName>$(ProjectFriendlyName) $(Version) $(Status)</ReleaseName>
		<PublishNuGet Condition=" '$(PublishMode)' == 'NuGet' ">PublishNuGet</PublishNuGet>
		<NuSpecFile Condition=" '$(NuSpecFile)' == '' ">$(ProjectFriendlyName).nuspec</NuSpecFile>
		<OutputPath>$(MSBuildProjectDirectory)\..\$(Project)\bin\debug</OutputPath>
		<ReleasesPath>$(MSBuildProjectDirectory)\..\$(Project)\bin\nuget</ReleasesPath>
		<NugetPath>$(MSBuildProjectDirectory)\..\.nuget</NugetPath>
		<ViewsPath>$(MSBuildProjectDirectory)\..\EndpointMvcSite\Views\Endpoints</ViewsPath>
		<StylesIncludeSearch>$(MSBuildProjectDirectory)\..\EndpointMvcSite\assets\styles\endpointmvc.css;$(MSBuildProjectDirectory)\..\EndpointMvcSite\assets\styles\endpointmvc.min.css;</StylesIncludeSearch>
		<ScriptsIncludeSearch>$(MSBuildProjectDirectory)\..\EndpointMvcSite\assets\scripts\endpointmvc.js;$(MSBuildProjectDirectory)\..\EndpointMvcSite\assets\scripts\endpointmvc.min.js;$(MSBuildProjectDirectory)\..\EndpointMvcSite\assets\scripts\endpointmvc.min.js.map;</ScriptsIncludeSearch>
		<PSIncludeSearch>$(MSBuildProjectDirectory)\install.ps1;</PSIncludeSearch>

		<LocalDeploy Condition=" '$(LocalDeploy)' == '' "></LocalDeploy>
	</PropertyGroup>

	<ItemGroup>
		<ProjectAssemblies Include="$(OutputPath)\$(Project).dll" />

		<NugetContentFiles Include="$(OutputPath)\Nuget\content\**" />
		<NugetToolsFiles Include="$(OutputPath)\Nuget\tools\**" />

	</ItemGroup>

	<Target Name="Publish" Condition=" '$(PublishMode)' == 'NuGet' " DependsOnTargets="NuGetPackage">

		<CreateProperty Value="$(ProjectFriendlyName).$(ProjectVersion).nupkg">
			<Output TaskParameter="Value" PropertyName="NugetPackage" />
		</CreateProperty>

		<Error Condition=" '$(NuSpecFile)' == '' " Code="500" Text="'NuSpecFile' property was not set."></Error>

		<Exec WorkingDirectory="$(NugetPath)" Command="nuget push setApiKey $(NuGetKey)" Condition=" '$(NuGetKey)' != '' "/>
		<Exec WorkingDirectory="$(NugetPath)" Command="nuget push $(NugetPackage) $(NuGetKey)"  Condition=" '$(NuGetKey)' != '' "/>


		<MakeDir Directories="$(ReleasesPath)" Condition="!Exists('$(ReleasesPath)')" />
		<Copy SourceFiles="$(NugetPath)\$(NugetPackage)" DestinationFolder="$(ReleasesPath)" />

		<MakeDir Directories="$(LocalDeploy)" Condition=" '$(LocalDeploy)' != '' AND !Exists('$(LocalDeploy)')" />
		<Copy SourceFiles="$(NugetPath)\$(NugetPackage)" DestinationFolder="$(LocalDeploy)" Condition=" '$(LocalDeploy)' != '' AND Exists('$(LocalDeploy)') " />

		<Delete Files="$(NugetPath)\$(NugetPackage)" />

	</Target>

	<Target Name="RetrieveIdentities">
		<GetAssemblyIdentity
        AssemblyFiles="@(ProjectAssemblies)">
			<Output
					TaskParameter="Assemblies"
					ItemName="ProjectIdentities"/>
		</GetAssemblyIdentity>
	</Target>

	<Target Name="NuGetPackage" DependsOnTargets="RetrieveIdentities">
		<CreateProperty Value="%(ProjectIdentities.Version)">
			<Output TaskParameter="Value" PropertyName="ProjectVersion" />
		</CreateProperty>

		<CreateProperty Value="$(OutputPath)\$(ProjectFriendlyName).$(ProjectVersion)">
			<Output TaskParameter="Value" PropertyName="PackagePath" />
		</CreateProperty>

		<CreateProperty Value="$(PackagePath)\lib\net45">
			<Output TaskParameter="Value" PropertyName="Net4LibPath" />
		</CreateProperty>

		<MakeDir Directories="$(Net4LibPath)" Condition="!Exists('$(Net4LibPath)')" />
		<MakeDir Directories="$(PackagePath)\content\Views\Endpoints" Condition="!Exists('$(PackagePath)\content\Views\Endpoints')" />
		<MakeDir Directories="$(PackagePath)\content\Content" Condition="!Exists('$(PackagePath)\content\Content')" />
		<MakeDir Directories="$(PackagePath)\content\Scripts" Condition="!Exists('$(PackagePath)\content\Scripts')" />
		<MakeDir Directories="$(PackagePath)\tools" Condition="!Exists('$(PackagePath)\tools')" />

		<Copy SourceFiles="$(MSBuildProjectDirectory)\$(NuSpecFile)" DestinationFiles="$(PackagePath)\$(ProjectFriendlyName).nuspec" />

		<CreateItem Include="@(ProjectAssemblies)" Exclude="$(OutputPath)*.zip;$(OutputPath)*.vshost.*;">
			<Output ItemName="CopyFiles" TaskParameter="Include"/>
		</CreateItem>

		<CreateItem Include="$(ViewsPath)\**\*.*">
			<Output ItemName="CopyMvcViews" TaskParameter="Include"/>
		</CreateItem>

		<CreateItem Include="$(StylesIncludeSearch)">
			<Output ItemName="CopyMvcStyles" TaskParameter="Include"/>
		</CreateItem>

		<CreateItem Include="$(ScriptsIncludeSearch)">
			<Output ItemName="CopyMvcScripts" TaskParameter="Include"/>
		</CreateItem>

		<CreateItem Include="$(PSIncludeSearch)">
			<Output ItemName="CopyNugetPS" TaskParameter="Include"/>
		</CreateItem>

		<Copy SourceFiles="@(CopyFiles)" DestinationFolder="$(Net4LibPath)" />
		
		<Copy SourceFiles="@(NugetContentFiles)" DestinationFolder="$(PackagePath)\content\%(RecursiveDir)" />
		<Copy SourceFiles="@(NugetToolsFiles)" DestinationFolder="$(PackagePath)\tools\%(RecursiveDir)" />

		<Copy SourceFiles="@(CopyMvcViews)" DestinationFolder="$(PackagePath)\content\Views\Endpoints\%(RecursiveDir)" />
		<Copy SourceFiles="@(CopyMvcScripts)" DestinationFolder="$(PackagePath)\content\Scripts\%(RecursiveDir)" />
		<Copy SourceFiles="@(CopyMvcStyles)" DestinationFolder="$(PackagePath)\content\Content\%(RecursiveDir)" />
		<Copy SourceFiles="@(CopyNugetPS)" DestinationFolder="$(PackagePath)\tools\%(RecursiveDir)" />

		<XmlUpdate
			XPath="/package/metadata/version"
			XmlFileName="$(PackagePath)\$(ProjectFriendlyName).nuspec"
			Value="%(ProjectIdentities.Version)"/>
		<XmlUpdate
			XPath="/package/metadata/id"
			XmlFileName="$(PackagePath)\$(ProjectFriendlyName).nuspec"
			Value="$(ProjectFriendlyName)"/>
		<XmlUpdate
			XPath="/package/metadata/releaseNotes"
			XmlFileName="$(PackagePath)\$(ProjectFriendlyName).nuspec"
			Value="$(ReleaseDescription)"/>

		<Exec WorkingDirectory="$(NugetPath)" Command="nuget pack &quot;$(PackagePath)\$(ProjectFriendlyName).nuspec&quot;" />
		<RemoveDir Directories="$(PackagePath)" Condition="Exists('$(PackagePath)')" ContinueOnError="true" />
	</Target>
</Project>